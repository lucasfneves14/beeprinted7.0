<style>
.modal{
	overflow:initial;
}

</style>
<div class="img-responsive w3-center" style='width:100%' id="view"></div>

<script charset="UTF-8" type="text/javascript">
    "use strict";
    var corAtual;
    var w = 750, h = 550;
    //--------------------------------------------------------
    if (screen.width <= 1000){
      var w = screen.width;
      var h = 350;
    }
    
    var renderer = new THREE.WebGLRenderer();
    renderer.setSize(w, h);
    var view = document.getElementById("view");
    view.appendChild(renderer.domElement);
    
      var camera = new THREE.PerspectiveCamera(45, w / h, 1, 1000);
      camera.position.set(0, 0, 150);
      var controls = new THREE.OrbitControls(camera, view);
    
    var scene = new THREE.Scene();
    scene.add(new THREE.AmbientLight(0x666666));
    scene.background = new THREE.Color( 0xf9f9f9);
    
    var alpha;
    var degrees;
    var cameraAng;
    var maior;
    
    var light1 = new THREE.DirectionalLight(0xffffff);
    light1.position.set(0, 100, 100);
    scene.add(light1);
    
    var light2 = new THREE.DirectionalLight(0xffffff);
    light2.position.set(0, -100, -100);
    scene.add(light2);

    
    
    var mat = new THREE.MeshPhongMaterial({
        color: 0xcccccc, ambient: 0xcccccc, specular: 0x030303,
    });
    var obj = new THREE.Mesh(new THREE.Geometry(), mat);
    scene.add(obj);

    var pivot = new THREE.Object3D();
    scene.add(pivot);
    var manager = new THREE.LoadingManager();

      // file load
    var oStlLoader = new THREE.STLLoader();  //----------------------------------------------------------------------------------------
    oStlLoader.load('<%=@model.attachment.url%>', function(geometry) {

        var material = new THREE.MeshPhongMaterial({
        color: 0x009FAB, ambient: 0xcccccc, specular: 0x030303,
      });

        obj = new THREE.Mesh(geometry, material);
        obj.rotation.x = -90 * Math.PI/180; //-105 graus

        var box = new THREE.Box3().setFromObject( obj );
        console.log( box.min, box.max, box.size(),obj.rotation );
            obj.position.y = -(box.max.y - (box.size().y/2));
            obj.position.x = -(box.max.x - (box.size().x/2));
            obj.position.z = -(box.max.z - (box.size().z/2));

        pivot = new THREE.Object3D();

        //pivot.position.set(obj.position.x, obj.position.y, obj.position.z);
        pivot.position.set(0, 0, 0);
        //pivot.rotation.set(obj.rotation.x, obj.rotation.y, obj.rotation.z);
        //obj.rotation.set(0, 0, 0);
        pivot.rotation.set(0, 0, 0);

        pivot.add(obj);
        //pivot.rotation.x = -105 * Math.PI/180;;

        //var w = 640, h = 450;
        if ((box.size().x>box.size().y)||(box.size().z>box.size().y)) {
              if (box.size().z>box.size().y) {
                maior = box.size().z;
              }
              else{
                maior = box.size().x;
              }
        }else{
            maior = box.size().y;
        };

        alpha = 2*Math.atan(maior/400);
        console.log(alpha);

        degrees = alpha * (180/Math.PI);
        camera = new THREE.PerspectiveCamera(degrees, w / h, 1, 800);
        //camera.position.set(0, 86.55, 150);
        camera.position.set(0, 63.767, 300);
        cameraAng = 12 * (Math.PI/180);
        camera.rotation.set(-cameraAng, 0, 0);
        controls = new THREE.OrbitControls(camera, view);

        scene.add(pivot);
    });//----------------------------------------------------------------------------------------------------------------------------
    //pivot.rotation.z = 90;
    function loop() {
        requestAnimationFrame(loop);

        corAtual = $('#order_color').val();
        if (corAtual === "Vermelho") {
            obj.material.color.setHex( 0xB22222 );
        }else if (corAtual === "Azul") {
            obj.material.color.setHex( 0x4682B4 );
        }else if (corAtual === "Amarelo") {
            obj.material.color.setHex( 0xFFD700 );
        }else if (corAtual === "Verde") {
            obj.material.color.setHex( 0x008000 );
        }else if (corAtual === "Preto") {
            obj.material.color.setHex( 0x1a1a1a );
        }else if (corAtual === "Branco") {
            obj.material.color.setHex( 0xf2f2f2 );
        }else if (corAtual === "Prata") {
            obj.material.color.setHex( 0x808080 );
        }
        else if (corAtual === "Marrom") {
            obj.material.color.setHex( 0x4d3319);
        }
        else if (corAtual === "Rose Gold") {
            obj.material.color.setHex( 0x993333);
        }
        else if (corAtual === "Laranja") {
            obj.material.color.setHex( 0xffa500);
        }
        ;

        //console.log(instaColor);
        pivot.rotation.y += 0.0014;
        controls.update();
        renderer.clear();
        renderer.render(scene, camera);
    };
       loop();


</script>